// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "TrackTarget.h"
TrackTarget::TrackTarget() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::elevation);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void TrackTarget::Initialize() {
	height = 0;
}
// Called repeatedly when this Command is scheduled to run
void TrackTarget::Execute() {
	try
		{
			printf(" 123  =  %f\n",Robot::oi->server->GetNumber("targetPixelHeight"));
			height = Robot::oi->server->GetNumber("targetPixelHeight");
		}
	catch (...)
		{
			printf("FAILBLOG.ORG\n");
			}
	if(height>245) {
		Robot::elevation->Down();
	}else if (height<235){
		Robot::elevation->Up();
	}
	else{
		Robot::elevation->Stop();
	}
	printf("%f\n",height);
}
// Make this return true when this Command no longer needs to run execute()
bool TrackTarget::IsFinished() {
	return false;
}
// Called once after isFinished returns true
void TrackTarget::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void TrackTarget::Interrupted() {
}
